<?xml version="1.0" encoding="UTF-8"?>
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:itm="http://java.sun.com/jsf/composite/components">


	<script src="https://code.highcharts.com/highcharts.js"></script>
	<script src="https://code.highcharts.com/modules/exporting.js"></script>
	
	<h:form>
		<div class="col-md-12">
			<div class="card card-accent-info">
				<div class="card-header">
					<i class="fa fa-newspaper-o" /><strong>#{resources['label.global.minhasinformacoes']}</strong>
				</div>
				<div class="card-block">
					<div class="row">
						<div class="col-sm-4">
							<div class="form-group">
								<label for="formCliente:cliente_nome">#{resources['label.global.nome']}:</label><br />
								#{homeController.homeTO.cliente.nome}
							</div>
						</div>
						<h:panelGroup id="idTipoPessoa" styleClass="col-sm-8">
							<ui:fragment
								rendered="#{homeController.homeTO.cliente.tipoPessoa.name eq 'FISICA'}">
								<div class="form-group">
									<label>#{resources['label.global.cpf']}:</label><br />#{homeController.homeTO.cliente.cpfCnpj}
								</div>
							</ui:fragment>
							<ui:fragment
								rendered="#{homeController.homeTO.cliente.tipoPessoa.name eq 'JURIDICA'}">
								<div class="col-sm-8">
									<div class="form-group">
										<label>#{resources['label.global.cnpj']}:</label>
										#{homeController.homeTO.cliente.cpfCnpj}
									</div>
								</div>
							</ui:fragment>
						</h:panelGroup>
					</div>

					<div class="row">
						<div class="col-sm-4">
							<div class="form-group">
								<label for="formCliente:cliente_telefone_celular">#{resources['label.global.endereco']}:</label><br />
								#{homeController.homeTO.cliente.endereco}
							</div>
						</div>
						<div class="col-sm-1">
							<div class="form-group">

								<label>#{resources['label.global.numero']}:</label><br />
								#{homeController.homeTO.cliente.numeroEndereco}
							</div>
						</div>
						<div class="col-sm-4">
							<div class="form-group">
								<label for="formCliente:cliente_telefone_celular">#{resources['label.global.bairro']}:</label><br />
								#{homeController.homeTO.cliente.bairro}
							</div>
						</div>
						<div class="col-sm-1">
							<div class="form-group">
								<label for="formCliente:cliente_telefone_cidade">#{resources['label.global.cidade']}:</label><br />
								#{homeController.homeTO.cliente.cidade}
							</div>
						</div>
					</div>
					<div class="row">
						<div class="col-sm-4">
							<div class="form-group">
								<label for="formCliente:cliente_telefone_celular">#{resources['label.global.celular']}:</label><br />
								#{homeController.homeTO.cliente.telefoneCelular}
							</div>
						</div>
						<div class="col-sm-4">
							<div class="form-group">
								<label for="formCliente:cliente_email">#{resources['label.global.email']}:</label><br />
								#{homeController.homeTO.cliente.email}
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
		<ui:repeat var="contrato" value="#{customIdentity.cliente.contratos}" varStatus="status">
			
			<h2 class="text-center"><br /><br />##{contrato.identificador}</h2>
			<h4 class="text-center">(#{contrato.status.name})</h4>
			<ui:fragment rendered="#{contrato.dataParaBloqueio ne null}">
				<h5 class="text-center">#{resources['label.global.tempoparabloqueio']}:<span id="clock_#{contrato.id}" /></h5>
			</ui:fragment>
			<br />
			<h:outputText value=" " />
			<div class="col-md-12 mb-2">
				<ul class="nav nav-tabs" role="tablist">
					<li class="nav-item">
					    <a class="nav-link active"
							data-toggle="tab" href="#home4_#{contrato.id}" role="tab"
							aria-controls="home"><i class="icon-calculator"></i> Dados
								Gerais </a>
					</li>
					
						<li class="nav-item">
							<a class="nav-link" data-toggle="tab" href="#profile4_#{contrato.id}" role="tab" aria-controls="profile">
								<i class="icon-basket-loaded"></i> Boletos em aberto
								<span class="badge badge-pill badge-danger">#{homeController.calcularQtdBoletoAberto(contrato)}</span>
							</a>
						</li>
					
					<ui:fragment rendered="#{homeController.calcularQtdBoletoAberto(contrato) > 0}">	
					<li class="nav-item"><a class="nav-link" data-toggle="tab"
						href="#messages4_#{contrato.id}" role="tab"
						aria-controls="messages"><i class="icon-pie-chart"></i>
							#{resources['label.global.promessapagamento']}</a></li>
					</ui:fragment>		 
					<ui:fragment rendered="#{contrato.autenticacoes ne null and not empty contrato.autenticacoes}">	
						<li class="nav-item">
							<a class="nav-link" data-toggle="tab"
							href="#medidor4_#{contrato.id}" role="tab"
							aria-controls="messages"><i class="fa fa-bar-chart"></i>
								#{resources['label.global.medidordetrafego']}</a>
						</li>
					</ui:fragment>		 
				</ul>

				<div class="tab-content">
					<div class="tab-pane active" id="home4_#{contrato.id}"
						role="tabpanel">

						<div class="card card-accent-info">
							<div class="card-header">
								<i class="fa fa-user" /> <strong>#{resources['label.global.informacoes']}</strong>
							</div>
							<div class="card-block">
								<div class="row">
									<div class="col-sm-6">
										<div class="form-group">
											<label for="formContrato:contrato_nome">#{resources['label.global.identificador']}:</label><br />
											#{contrato.identificador}
										</div>
									</div>
									<div class="col-sm-6">
										<div class="form-group">
											<label for="formContrato:contrato_diamesvencimento">#{resources['label.global.diamesvencimento']}:</label><br />
											#{contrato.diaMesVencimento}
										</div>
									</div>
								</div>
							</div>
						</div>
						<div class="card card-accent-info">
							<div class="card-header">
								<i class="fa fa-user" /> <strong>#{resources['label.global.produtos']}</strong>
							</div>
							<div class="card-block">
								<div class="row">
									<table id="idDataTableContratoProduto"
										class="table table-bordered">

										<thead>
											<tr>
												<th scope="col">#{resources['label.global.data']}</th>
												<th scope="col">#{resources['label.global.nome']}</th>
												<th scope="col">#{resources['label.global.valortotal']}</th>
												<th scope="col">#{resources['label.global.datainicio']}</th>
												<th scope="col">#{resources['label.global.datafim']}</th>
											</tr>
										</thead>
										<ui:repeat var="contratoProduto"
											value="#{contrato.contratoProdutos}">

											<tr
												class="#{contratoProduto.vigente?'card-success-clean':''}">
												<td><h:outputText
														value="#{contratoProduto.dataCriacao}">
														<f:convertDateTime pattern="dd/MM/yyyy" />
													</h:outputText></td>
												<td><h:outputText
														value="#{contratoProduto.produto.nome}" /></td>
												<td><h:outputText value="#{contratoProduto.valor}">
														<f:convertNumber pattern="#,##0.00" />
													</h:outputText></td>
												<td><h:outputText value="#{contratoProduto.dataInicio}">
														<f:convertDateTime pattern="dd/MM/yyyy" />
													</h:outputText></td>
												<td><h:outputText value="#{contratoProduto.dataFim}">
														<f:convertDateTime pattern="dd/MM/yyyy" />
													</h:outputText></td>
											</tr>
										</ui:repeat>
									</table>
								</div>
							</div>
						</div>


					</div>
					<div class="tab-pane" id="profile4_#{contrato.id}" role="tabpanel">
						
						<ui:fragment rendered="#{contrato.boletos eq null or empty contrato.boletos}">
								<h4>Parabéns, você não possui boletos em aberto. </h4>
						</ui:fragment>
					
						<h:dataTable id="idDataTableContratoBoleto" rendered="#{contrato.boletos ne null and  not empty contrato.boletos}" 
								value="#{contrato.boletos}" var="boleto" styleClass="table table-bordered table-striped">
								<h:column>
									<f:facet name="header">#{resources['label.global.datavencimento']}</f:facet>
									<h:outputText value="#{boleto.dataVencimento}">
										<f:convertDateTime pattern="dd/MM/yyyy" />
									</h:outputText>
								</h:column>
								<h:column>
									<f:facet name="header">#{resources['label.global.status']}</f:facet>
									<h:outputText value="#{boleto.status.name}" />
								</h:column>
								<h:column>
									<f:facet name="header">#{resources['label.global.valor']}</f:facet>
									<h:outputText value="#{boleto.valor}">
										<f:convertNumber pattern="#,##0.00" /> 
									</h:outputText>
								</h:column>
								<h:column>
									
									<f:facet name="header">#{resources['label.global.acoes']}</f:facet>
									<ui:fragment rendered="#{boleto.status.name eq 'ABERTO'}">
									
										<ui:fragment rendered="#{boleto.dataVencimento le homeController.homeTO.dataAtual}">
											<h:commandLink  styleClass="btn btn-secondary" action="#{homeController.downloadSegundaViaBoleto(boleto)}">
												<i class="fa fa-download"></i> #{resources['label.global.segundavia']}
											</h:commandLink>  
										</ui:fragment>	
										
										<ui:fragment rendered="#{boleto.dataVencimento ge homeController.homeTO.dataAtual}">
											<h:outputText value=" " />
											<h:commandLink  styleClass="btn btn-secondary" action="#{homeController.downloadBoleto(boleto)}">
												<i class="fa fa-download"></i> #{resources['label.global.download']}
											</h:commandLink> 
											<h:outputText value=" " />
											<h:commandLink styleClass="btn btn-secondary" action="#{homeController.enviarEmail(boleto)}">
												<i class="fa fa-envelope-o"></i> #{resources['label.global.receberviaemail']} 
											</h:commandLink>
											<h:outputText value=" " />
											<h:commandLink styleClass="btn btn-secondary" action="#{homeController.enviarSMS(boleto)}">
												<i class="fa fa-commenting-o"></i> #{resources['label.global.receberviasms']} 
											</h:commandLink>
										</ui:fragment>
									</ui:fragment>
								</h:column>
							</h:dataTable>
					</div>
					
					<ui:fragment rendered="#{homeController.calcularQtdBoletoAberto(contrato) > 0}">
						<div class="tab-pane" id="messages4_#{contrato.id}" role="tabpanel">
							<ui:fragment rendered="#{contrato.dataParaBloqueio eq null}">
								<p>A promessa de pagamento permite que sua internet seja desbloqueada temporariamente, permitindo que você efetue o pagamento.</p>
								<p>Caso o pagamento não seja identificado nesse periodo, será bloqueada novamente.</p>
								<br />
									<h:commandLink styleClass="btn btn-secondary" action="#{homeController.promessaPagamento(contrato)}">
										<i class="fa fa-commenting-o"></i> #{resources['label.global.cliqueaquiprometerpagamento']} 
									</h:commandLink>
							</ui:fragment>	
							<ui:fragment rendered="#{contrato.dataParaBloqueio ne null}">
								<p>Promessa de pagamento ja registrada!</p>							
							</ui:fragment>
						</div>
					</ui:fragment>
					
					<ui:fragment rendered="#{contrato.autenticacoes ne null and not empty contrato.autenticacoes}">	
						
						<div class="tab-pane" id="medidor4_#{contrato.id}" role="tabpanel">
							<div class="row">
								<div class="col-sm-6">
									<div class="card card-accent-info">
										<div class="card-header">
											<strong>#{resources['label.global.download']}</strong>
										</div>
										<div class="card-block">
											<div class="row">
												<div class="col-sm-12">
													<div id="container_download_#{contrato.id}"
														style="min-width: 100%; height: 400px; margin: 0 auto"></div>
												</div>
											</div>
										</div>
									</div>	
								</div>
								<div class="col-sm-6">
									<div class="card card-accent-info">
										<div class="card-header">
											<strong>#{resources['label.global.upload']}</strong>
										</div>
										<div class="card-block">
											<div class="row">
												<div class="col-sm-12">
													<div id="container_upload_#{contrato.id}"
														style="min-width: 100%; height: 400px; margin: 0 auto"></div>
												</div>
											</div>
										</div>
									</div>	
								</div>
							</div>	
						</div>
					</ui:fragment>
					
					
				</div>
			</div>
			
			
			
			
			<script>
		//<![CDATA[



			  $(document).ready(function () {

				    var wsocket_#{contrato.id}; 
				    var downloadAnterior_#{contrato.id}=0;
		            var uploadAnterior_#{contrato.id}=0;
				  
				    Highcharts.setOptions({
				        global: {
				            useUTC: false
				        },
				        colors: [
				           'rgba( 0,   154, 253, 0.9 )', //bright blue
				            'rgba( 253, 99,  0,   0.9 )', //bright orange
				            'rgba( 40,  40,  56,  0.9 )', //dark
				            'rgba( 253, 0,   154, 0.9 )', //bright pink
				            'rgba( 154, 253, 0,   0.9 )', //bright green
				            'rgba( 145, 44,  138, 0.9 )', //mid purple
				            'rgba( 45,  47,  238, 0.9 )', //mid blue
				            'rgba( 177, 69,  0,   0.9 )', //dark orange
				            'rgba( 140, 140, 156, 0.9 )', //mid
				            'rgba( 238, 46,  47,  0.9 )', //mid red
				            'rgba( 44,  145, 51,  0.9 )', //mid green
				            'rgba( 103, 16,  192, 0.9 )' //dark purple
				          ],
				          chart: {
				              alignTicks: false,
				              type: '',
				              margin: [60, 25, 100, 90],
				              
				             // borderRadius:10,
				             // borderWidth:1,
				            //  borderColor:'rgba(156,156,156,.25)',
				            //  backgroundColor:'rgba(204,204,204,.25)',
				              plotBackgroundColor:'rgba(255,255,255,1)',
				              
				            }
				    });

				   var charDownload_#{contrato.id} =  Highcharts.chart('container_download_#{contrato.id}', {
				        chart: {
				            type: 'column',
				            marginRight: 20,
				            events: {
				                load: function () {
			
				                    
				                }
				            }
				        },
				        title: {
				            text: 'Download'
				        },
				        xAxis: {
				            type: 'datetime',
				            tickPixelInterval: 2
				        },
				        yAxis: {
				            title: {
				                text: 'Mb/s'
				            },
				            plotLines: [{
				                value: 0,
				                width: 1,
				                color: '#808080' 
				            }]
				        },
				        tooltip: {
				            formatter: function () {
				                return '<b>' + this.series.name + '</b><br/>' +
				                    Highcharts.dateFormat('%H:%M:%S', this.x) + '<br/>' +
				                    Highcharts.numberFormat(this.y, 3);
				            }
				        },
				        legend: {
				            enabled: true
				        },
				        plotOptions: {
				        	series: {
				                pointPadding: 0,
				                groupPadding: 0,
				                borderWidth: 0.5,
				                borderColor: 'rgba(255,255,255,0.5)',
				                color: Highcharts.getOptions().colors[1]
				              }
				        },
				        exporting: {
				            enabled: false
				        },
				        series: [{
				            name: 'Download',
				            lineWidth: 4,
				            data: (function () {
				                var data = [],
				                    time = (new Date()).getTime(),
				                    i;
			
				                for (i = -20; i <= 0; i += 1) {
				                    data.push({
				                        x: time + i * 1000,
				                        y: 0
				                    });
				                }
			
				                return data;
				            }())
				        }]
				    });


					
				    var charUpload_#{contrato.id} = Highcharts.chart('container_upload_#{contrato.id}', {
				        chart: {
				            type: 'column',
				            marginRight: 20,
				            events: {
				                load: function () {
				                    
				                }
				            }
				        },
				        title: {
				            text: 'Upload'
				        },
				        xAxis: {
				            type: 'datetime',
				            tickPixelInterval: 2
				        },
				        yAxis: {
				            title: {
				                text: 'Mb/s'
				            },
				            plotLines: [{
				                value: 0,
				                width: 1,
				                color: '#808080'
				            }]
				        },
				        tooltip: {
				            formatter: function () {
				                return '<b>' + this.series.name + '</b><br/>' + Highcharts.dateFormat('%H:%M:%S', this.x) + '<br/>' +
				                    Highcharts.numberFormat(this.y,4);
				            }
				        },
				        legend: {
				            enabled: true
				        },
				        plotOptions: {
				        	series: {
				                pointPadding: 0,
				                groupPadding: 0,
				                borderWidth: 0.5,
				                borderColor: 'rgba(255,255,255,0.5)',
				                color: Highcharts.getOptions().colors[7]
				              }
				        },
				        exporting: {
				            enabled: false
				        },
				        series: [{
				            name: 'Upload',
				            lineWidth: 4,
				            data: (function () {
				                // generate an array of random data
				                var data = [],
				                    time = (new Date()).getTime(),
				                    i;
			
				                for (i = -20; i <= 0; i += 1) {
				                    data.push({
				                        x: time + i * 1000,
				                        y: 0
				                    });
				                }
			
				                return data;
				            }())
				        }]
				    });


					  function connect_#{contrato.id}() {         
/* 						wsocket_#{contrato.id} = new WebSocket("ws://177.190.160.251:8080/itm/snmpserver");        */
						wsocket_#{contrato.id} = new WebSocket("ws://${request.requestURL.substring(6,request.requestURL.indexOf('/pages') )}/snmpclienteserver");       
						wsocket_#{contrato.id}.onmessage = onMessage_#{contrato.id};  
						wsocket_#{contrato.id}.onopen = onOpen_#{contrato.id};  
					  }
					
				      function onMessage_#{contrato.id}(evt) {  
					     obj = JSON.parse(evt.data);
					     
						 x = (new Date()).getTime();
						 if(downloadAnterior_#{contrato.id} > 0){ 
								yDownload = (((obj.download - downloadAnterior_#{contrato.id})* 8/1024)/1024);
								yDownload = yDownload < 0 ? yDownload * (-1):yDownload;
			             }else{
								yDownload =0;
				         }
				         downloadAnterior_#{contrato.id} = obj.download;

						 if(uploadAnterior_#{contrato.id} > 0){ 
								yUpload = (((obj.upload - uploadAnterior_#{contrato.id})* 8/1024)/1024);
								yUpload = yUpload < 0 ? yUpload * (-1):yUpload;
			             }else{
								yUpload =0;
				         }
						 uploadAnterior_#{contrato.id} = obj.upload;

						 //if(yDownload > 0.1){
							 charDownload_#{contrato.id}.series[0].addPoint([x, yDownload], true, true);
						 //}
						 //if(yUpload > 0.1){
							 charUpload_#{contrato.id}.series[0].addPoint([x, yUpload], true, true);
						 //}
					          
				      }

				      function onOpen_#{contrato.id}(evt) {             
				    	  wsocket_#{contrato.id}.send("#{contrato.autenticacoes.get(0).username}");          
					  }
					  connect_#{contrato.id}();
				    
				});
		      
		//]]>
		</script>
		
		<ui:fragment rendered="#{contrato.dataParaBloqueio ne null}">
			<script>
				$('#clock_#{contrato.id}').countdown('#{homeController.formatDate(contrato.dataParaBloqueio)}', {elapse: true})
					.on('update.countdown', function(event) {
					  var $this = $(this);
					  if (event.elapsed) {
					    $this.html(event.strftime('<span style="color:#b00">Executado</span>'));
					  } else {
					    $this.html(event.strftime('<span >%D dias %H:%M:%S</span>'));
					  }
				});
	    	</script>
    	</ui:fragment>
		</ui:repeat>
	</h:form>
	
</ui:composition>

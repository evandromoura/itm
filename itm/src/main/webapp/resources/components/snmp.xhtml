<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:cc="http://java.sun.com/jsf/composite"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html">

<cc:interface>
	<cc:attribute name="id" />
	<cc:attribute name="username" />
</cc:interface>

<cc:implementation>



	<script>
		//<![CDATA[

			  $(document).ready(function () {

				    var wsocket; 
				    var downloadAnterior=0;
		            var uploadAnterior=0;
				  
				    Highcharts.setOptions({
				        global: {
				            useUTC: false
				        },
				        colors: [
				           'rgba( 0,   154, 253, 0.9 )', //bright blue
				            'rgba( 253, 99,  0,   0.9 )', //bright orange
				            'rgba( 40,  40,  56,  0.9 )', //dark
				            'rgba( 253, 0,   154, 0.9 )', //bright pink
				            'rgba( 154, 253, 0,   0.9 )', //bright green
				            'rgba( 145, 44,  138, 0.9 )', //mid purple
				            'rgba( 45,  47,  238, 0.9 )', //mid blue
				            'rgba( 177, 69,  0,   0.9 )', //dark orange
				            'rgba( 140, 140, 156, 0.9 )', //mid
				            'rgba( 238, 46,  47,  0.9 )', //mid red
				            'rgba( 44,  145, 51,  0.9 )', //mid green
				            'rgba( 103, 16,  192, 0.9 )' //dark purple
				          ],
				          chart: {
				              alignTicks: false,
				              type: '',
				              margin: [60, 25, 100, 90],
				              
				             // borderRadius:10,
				             // borderWidth:1,
				            //  borderColor:'rgba(156,156,156,.25)',
				            //  backgroundColor:'rgba(204,204,204,.25)',
				              plotBackgroundColor:'rgba(255,255,255,1)',
				              
				            }
				    });

				   var charDownload =  Highcharts.chart('container_download_#{cc.attrs.username}', {
				        chart: {
				            type: 'column',
				            marginRight: 20,
				            events: {
				                load: function () {
			
				                    
				                }
				            }
				        },
				        title: {
				            text: 'Download'
				        },
				        xAxis: {
				            type: 'datetime',
				            tickPixelInterval: 2
				        },
				        yAxis: {
				            title: {
				                text: 'Mb/s'
				            },
				            plotLines: [{
				                value: 0,
				                width: 1,
				                color: '#808080' 
				            }]
				        },
				        tooltip: {
				            formatter: function () {
				                return '<b>' + this.series.name + '</b><br/>' +
				                    Highcharts.dateFormat('%H:%M:%S', this.x) + '<br/>' +
				                    Highcharts.numberFormat(this.y, 3);
				            }
				        },
				        legend: {
				            enabled: true
				        },
				        plotOptions: {
				        	series: {
				                pointPadding: 0,
				                groupPadding: 0,
				                borderWidth: 0.5,
				                borderColor: 'rgba(255,255,255,0.5)',
				                color: Highcharts.getOptions().colors[1]
				              }
				        },
				        exporting: {
				            enabled: false
				        },
				        series: [{
				            name: 'Download',
				            lineWidth: 4,
				            data: (function () {
				                var data = [],
				                    time = (new Date()).getTime(),
				                    i;
			
				                for (i = -20; i <= 0; i += 1) {
				                    data.push({
				                        x: time + i * 1000,
				                        y: 0
				                    });
				                }
			
				                return data;
				            }())
				        }]
				    });


					
				    var charUpload = Highcharts.chart('container_upload_#{cc.attrs.username}', {
				        chart: {
				            type: 'column',
				            marginRight: 20,
				            events: {
				                load: function () {
				                    
				                }
				            }
				        },
				        title: {
				            text: 'Upload'
				        },
				        xAxis: {
				            type: 'datetime',
				            tickPixelInterval: 2
				        },
				        yAxis: {
				            title: {
				                text: 'Mb/s'
				            },
				            plotLines: [{
				                value: 0,
				                width: 1,
				                color: '#808080'
				            }]
				        },
				        tooltip: {
				            formatter: function () {
				                return '<b>' + this.series.name + '</b><br/>' + Highcharts.dateFormat('%H:%M:%S', this.x) + '<br/>' +
				                    Highcharts.numberFormat(this.y,4);
				            }
				        },
				        legend: {
				            enabled: true
				        },
				        plotOptions: {
				        	series: {
				                pointPadding: 0,
				                groupPadding: 0,
				                borderWidth: 0.5,
				                borderColor: 'rgba(255,255,255,0.5)',
				                color: Highcharts.getOptions().colors[7]
				              }
				        },
				        exporting: {
				            enabled: false
				        },
				        series: [{
				            name: 'Upload',
				            lineWidth: 4,
				            data: (function () {
				                // generate an array of random data
				                var data = [],
				                    time = (new Date()).getTime(),
				                    i;
			
				                for (i = -20; i <= 0; i += 1) {
				                    data.push({
				                        x: time + i * 1000,
				                        y: 0
				                    });
				                }
			
				                return data;
				            }())
				        }]
				    });


					  function connect() {         
/* 						wsocket = new WebSocket("ws://177.190.160.251:8080/itm/snmpserver");        */
						wsocket = new WebSocket("ws://${request.requestURL.substring(6,request.requestURL.indexOf('/pages') )}/snmpclienteserver");       
						wsocket.onmessage = onMessage;  
						wsocket.onopen = onOpen;  
					  }
					
				      function onMessage(evt) {  
					     obj = JSON.parse(evt.data);
					     
						 x = (new Date()).getTime();
						 if(downloadAnterior > 0){ 
								yDownload = (((obj.download - downloadAnterior)* 8/1024)/1024);
								yDownload = yDownload < 0 ? yDownload * (-1):yDownload;
			             }else{
								yDownload =0;
				         }
				         downloadAnterior = obj.download;

						 if(uploadAnterior > 0){ 
								yUpload = (((obj.upload - uploadAnterior)* 8/1024)/1024);
								yUpload = yUpload < 0 ? yUpload * (-1):yUpload;
			             }else{
								yUpload =0;
				         }
						 uploadAnterior = obj.upload;

						 //if(yDownload > 0.1){
							 charDownload.series[0].addPoint([x, yDownload], true, true);
						 //}
						 //if(yUpload > 0.1){
							 charUpload.series[0].addPoint([x, yUpload], true, true);
						 //}
					          
				      }

				      function onOpen(evt) {             
				    	  wsocket.send("#{cc.attrs.username}");          
					  }

					  connect();
				    
				});

			  var url = document.location.toString();
			  if (url.match('#')) {
			      $('.nav-tabs a[href="#' + url.split('#')[1] + '"]').tab('show');
			  } 
 
			  // Change hash for page-reload
			  $('.nav-tabs a').on('shown.bs.tab', function (e) {
			      window.location.hash = e.target.hash;
			  })
		      
		      
		//]]>
		</script>



	<div class="card card-accent-success">
		<div class="row">
			<div class="col-sm-6">
				<div class="card-header">
					<strong>#{cc.attrs.username}</strong>
				</div>


				<div class="card-block">

					<div class="row">
						<div class="col-sm-12">
							<div id="container_download_#{cc.attrs.username}"
								style="min-width: 100%; height: 400px; margin: 0 auto"></div>
						</div>
					</div>
				</div>
			</div>
			<div class="col-sm-6">

				<div class="card-header">
					<strong>#{cc.attrs.username}</strong>
				</div>
				<div class="card-block">
					<div class="row">
						<div class="col-sm-12">
							<div id="container_upload_#{cc.attrs.username}"
								style="min-width: 100%; height: 400px; margin: 0 auto"></div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>

</cc:implementation>

</html>